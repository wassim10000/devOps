name: Full CI/CD Pipeline for DevOps Project

on:
  push:
    branches: [main]

jobs:
  build-deploy-user-service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v2

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies & run tests
        run: |
          cd user-service
          npm install
          npm test || echo "tests non implémentés"

      - name: Build Docker image
        run: docker buildx build --load -t $DOCKER_USER/user-service:latest ./user-service
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}

      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: docker push $DOCKER_USER/user-service:latest
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}

      - uses: azure/setup-kubectl@v3
        with:
          version: v1.26.0

      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_CONTENT }}" > ~/.kube/config

      - uses: azure/setup-helm@v3

      - name: Helm Deploy
        run: helm upgrade --install user-service ./helm/user-service --namespace default

  build-deploy-salle-service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v2

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies & run tests
        run: |
          cd salle-service
          npm install
          npm test || echo "tests non implémentés"

      - name: Build Docker image
        run: docker buildx build --load -t $DOCKER_USER/salle-service:latest ./salle-service
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}

      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: docker push $DOCKER_USER/salle-service:latest
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}

      - uses: azure/setup-kubectl@v3
        with:
          version: v1.26.0

      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_CONTENT }}" > ~/.kube/config

      - uses: azure/setup-helm@v3

      - name: Helm Deploy
        run: helm upgrade --install salle-service ./helm/salle-service --namespace default

  build-deploy-reservation-service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v2

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies & run tests
        run: |
          cd reservation-service
          npm install
          npm test || echo "tests non implémentés"

      - name: Build Docker image
        run: docker buildx build --load -t $DOCKER_USER/reservation-service:latest ./reservation-service
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}

      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: docker push $DOCKER_USER/reservation-service:latest
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}

      - uses: azure/setup-kubectl@v3
        with:
          version: v1.26.0

      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_CONTENT }}" > ~/.kube/config

      - uses: azure/setup-helm@v3

      - name: Helm Deploy
        run: helm upgrade --install reservation-service ./helm/reservation-service --namespace default